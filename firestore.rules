rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default: Deny all access
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- Helper Functions ---
    // Function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    // Function to check if user is an administrator
    function isAdmin() {
      return isAuthenticated() && request.auth.token.isAdmin == true;
    }

    // --- User Data Collection ---
    // Users can read and write to their own profile document and its subcollections (e.g., attemptedMCQs, attemptedFlashcards, goals).
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    // Explicitly allow subcollection access
    match /users/{userId}/{collectionId}/{document=**} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // --- Content Collections (Public Read, Admin Write) ---
    // All authenticated users can read main content collections.
    // Only administrators can create, update, or delete content.
    match /Topics/{topicId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    // Chapter notes are stored in a subcollection for General topics
    match /Topics/{topicId}/ChapterNotes/{chapterId} {
      allow read: if isAuthenticated(); // All authenticated can read notes
      allow write: if isAdmin();        // Only admins can write/update notes
    }
    
    match /MarrowTopics/{topicId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /MasterMCQ/{mcqId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /MarrowMCQ/{mcqId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /Flashcards/{flashcardId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /KeyClinicalTopics/{topicId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // --- Application Data Collections ---
    // Quiz results: A user can create their own result, and only read their own results.
    // Ensure that `userId` in the new document matches the authenticated user's UID.
    match /quizResults/{resultId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // No updates or deletes allowed from client for quiz results (immutable once created)
    }
    
    // Temporary quiz sessions: Can only be accessed by the user who created them.
    // They are primarily managed by backend functions.
    match /quizSessions/{sessionId} {
      allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Delete is also managed by backend (e.g., on session expiry or finish)
    }

    // Custom tests: Can only be read/written by the user who created them.
    match /customTests/{testId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Admin-only userUploads collection: For content generation jobs.
    // Only administrators can read or write to this collection.
    match /userUploads/{uploadId} {
      allow read, write: if isAdmin();
    }

    // Logs: This collection is written to by functions, and read by the owning user.
    match /logs/{logId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow write: if false; // Only functions should write to logs
    }
  }
}